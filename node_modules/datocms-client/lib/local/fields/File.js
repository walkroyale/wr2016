'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _queryString = require('query-string');

var _queryString2 = _interopRequireDefault(_queryString);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var File = function () {
  function File(value) {
    _classCallCheck(this, File);

    this.value = value;
  }

  _createClass(File, [{
    key: 'url',
    value: function url(params) {
      var baseUrl = 'https://dato-images.imgix.net' + this.path;
      if (params) {
        return baseUrl + '?' + _queryString2.default.stringify(params);
      }
      return baseUrl;
    }
  }, {
    key: 'toMap',
    value: function toMap() {
      return {
        format: this.format,
        size: this.size,
        url: this.url()
      };
    }
  }, {
    key: 'path',
    get: function get() {
      return this.value.path;
    }
  }, {
    key: 'format',
    get: function get() {
      return this.value.format;
    }
  }, {
    key: 'size',
    get: function get() {
      return this.value.size;
    }
  }]);

  return File;
}();

exports.default = File;
module.exports = exports['default'];